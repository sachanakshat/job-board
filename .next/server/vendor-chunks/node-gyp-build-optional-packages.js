"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/node-gyp-build-optional-packages";
exports.ids = ["vendor-chunks/node-gyp-build-optional-packages"];
exports.modules = {

/***/ "(rsc)/./node_modules/node-gyp-build-optional-packages/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/node-gyp-build-optional-packages/index.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst runtimeRequire =  true ? require : 0 // eslint-disable-line\n;\nif (typeof runtimeRequire.addon === \"function\") {\n    module.exports = runtimeRequire.addon.bind(runtimeRequire);\n} else {\n    module.exports = __webpack_require__(/*! ./node-gyp-build.js */ \"(rsc)/./node_modules/node-gyp-build-optional-packages/node-gyp-build.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbm9kZS1neXAtYnVpbGQtb3B0aW9uYWwtcGFja2FnZXMvaW5kZXguanMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU1BLGlCQUFpQixLQUErQixHQUFhRSxPQUF1QkEsR0FBR0MsQ0FBT0EsQ0FBQyxzQkFBc0I7O0FBQzNILElBQUksT0FBT0gsZUFBZUksS0FBSyxLQUFLLFlBQVk7SUFDOUNDLE9BQU9DLE9BQU8sR0FBR04sZUFBZUksS0FBSyxDQUFDRyxJQUFJLENBQUNQO0FBQzdDLE9BQU87SUFDTEssMElBQXlCO0FBQzNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vam9iLWJvYXJkLXNjcmFwZXIvLi9ub2RlX21vZHVsZXMvbm9kZS1neXAtYnVpbGQtb3B0aW9uYWwtcGFja2FnZXMvaW5kZXguanM/MGI2YSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBydW50aW1lUmVxdWlyZSA9IHR5cGVvZiBfX3dlYnBhY2tfcmVxdWlyZV9fID09PSAnZnVuY3Rpb24nID8gX19ub25fd2VicGFja19yZXF1aXJlX18gOiByZXF1aXJlIC8vIGVzbGludC1kaXNhYmxlLWxpbmVcbmlmICh0eXBlb2YgcnVudGltZVJlcXVpcmUuYWRkb24gPT09ICdmdW5jdGlvbicpIHsgLy8gaWYgdGhlIHBsYXRmb3JtIHN1cHBvcnRzIG5hdGl2ZSByZXNvbHZpbmcgcHJlZmVyIHRoYXRcbiAgbW9kdWxlLmV4cG9ydHMgPSBydW50aW1lUmVxdWlyZS5hZGRvbi5iaW5kKHJ1bnRpbWVSZXF1aXJlKVxufSBlbHNlIHsgLy8gZWxzZSB1c2UgdGhlIHJ1bnRpbWUgdmVyc2lvbiBoZXJlXG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9ub2RlLWd5cC1idWlsZC5qcycpXG59XG4iXSwibmFtZXMiOlsicnVudGltZVJlcXVpcmUiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwiX19ub25fd2VicGFja19yZXF1aXJlX18iLCJyZXF1aXJlIiwiYWRkb24iLCJtb2R1bGUiLCJleHBvcnRzIiwiYmluZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/node-gyp-build-optional-packages/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/node-gyp-build-optional-packages/node-gyp-build.js":
/*!*************************************************************************!*\
  !*** ./node_modules/node-gyp-build-optional-packages/node-gyp-build.js ***!
  \*************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar fs = __webpack_require__(/*! fs */ \"fs\");\nvar path = __webpack_require__(/*! path */ \"path\");\nvar url = __webpack_require__(/*! url */ \"url\");\nvar os = __webpack_require__(/*! os */ \"os\");\n// Workaround to fix webpack's build warnings: 'the request of a dependency is an expression'\nvar runtimeRequire =  true ? require : 0 // eslint-disable-line\n;\nvar vars = process.config && process.config.variables || {};\nvar prebuildsOnly = !!process.env.PREBUILDS_ONLY;\nvar versions = process.versions;\nvar abi = versions.modules;\nif (versions.deno || process.isBun) {\n    // both Deno and Bun made the very poor decision to shoot themselves in the foot and lie about support for ABI\n    // (which they do not have)\n    abi = \"unsupported\";\n}\nvar runtime = isElectron() ? \"electron\" : isNwjs() ? \"node-webkit\" : \"node\";\nvar arch = process.env.npm_config_arch || os.arch();\nvar platform = process.env.npm_config_platform || os.platform();\nvar libc = process.env.LIBC || (isMusl(platform) ? \"musl\" : \"glibc\");\nvar armv = process.env.ARM_VERSION || (arch === \"arm64\" ? \"8\" : vars.arm_version) || \"\";\nvar uv = (versions.uv || \"\").split(\".\")[0];\nmodule.exports = load;\nfunction load(dir) {\n    return runtimeRequire(load.resolve(dir));\n}\nload.resolve = load.path = function(dir) {\n    dir = path.resolve(dir || \".\");\n    var packageName = \"\";\n    var packageNameError;\n    try {\n        packageName = runtimeRequire(path.join(dir, \"package.json\")).name;\n        var varName = packageName.toUpperCase().replace(/-/g, \"_\");\n        if (process.env[varName + \"_PREBUILD\"]) dir = process.env[varName + \"_PREBUILD\"];\n    } catch (err) {\n        packageNameError = err;\n    }\n    if (!prebuildsOnly) {\n        var release = getFirst(path.join(dir, \"build/Release\"), matchBuild);\n        if (release) return release;\n        var debug = getFirst(path.join(dir, \"build/Debug\"), matchBuild);\n        if (debug) return debug;\n    }\n    var prebuild = resolve(dir);\n    if (prebuild) return prebuild;\n    var nearby = resolve(path.dirname(process.execPath));\n    if (nearby) return nearby;\n    var platformPackage = (packageName[0] == \"@\" ? \"\" : \"@\" + packageName + \"/\") + packageName + \"-\" + platform + \"-\" + arch;\n    var packageResolutionError;\n    try {\n        var prebuildPackage = path.dirname((__webpack_require__(/*! module */ \"module\").createRequire)(url.pathToFileURL(path.join(dir, \"package.json\"))).resolve(platformPackage));\n        return resolveFile(prebuildPackage);\n    } catch (error) {\n        packageResolutionError = error;\n    }\n    var target = [\n        \"platform=\" + platform,\n        \"arch=\" + arch,\n        \"runtime=\" + runtime,\n        \"abi=\" + abi,\n        \"uv=\" + uv,\n        armv ? \"armv=\" + armv : \"\",\n        \"libc=\" + libc,\n        \"node=\" + process.versions.node,\n        process.versions.electron ? \"electron=\" + process.versions.electron : \"\",\n         true ? \"webpack=true\" : 0 // eslint-disable-line\n    ].filter(Boolean).join(\" \");\n    let errMessage = \"No native build was found for \" + target + \"\\n    attempted loading from: \" + dir + \" and package:\" + \" \" + platformPackage + \"\\n\";\n    if (packageNameError) {\n        errMessage += \"Error finding package.json: \" + packageNameError.message + \"\\n\";\n    }\n    if (packageResolutionError) {\n        errMessage += \"Error resolving package: \" + packageResolutionError.message + \"\\n\";\n    }\n    throw new Error(errMessage);\n    function resolve(dir) {\n        // Find matching \"prebuilds/<platform>-<arch>\" directory\n        var tuples = readdirSync(path.join(dir, \"prebuilds\")).map(parseTuple);\n        var tuple = tuples.filter(matchTuple(platform, arch)).sort(compareTuples)[0];\n        if (!tuple) return;\n        return resolveFile(path.join(dir, \"prebuilds\", tuple.name));\n    }\n    function resolveFile(prebuilds) {\n        // Find most specific flavor first\n        var parsed = readdirSync(prebuilds).map(parseTags);\n        var candidates = parsed.filter(matchTags(runtime, abi));\n        var winner = candidates.sort(compareTags(runtime))[0];\n        if (winner) return path.join(prebuilds, winner.file);\n    }\n};\nfunction readdirSync(dir) {\n    try {\n        return fs.readdirSync(dir);\n    } catch (err) {\n        return [];\n    }\n}\nfunction getFirst(dir, filter) {\n    var files = readdirSync(dir).filter(filter);\n    return files[0] && path.join(dir, files[0]);\n}\nfunction matchBuild(name) {\n    return /\\.node$/.test(name);\n}\nfunction parseTuple(name) {\n    // Example: darwin-x64+arm64\n    var arr = name.split(\"-\");\n    if (arr.length !== 2) return;\n    var platform = arr[0];\n    var architectures = arr[1].split(\"+\");\n    if (!platform) return;\n    if (!architectures.length) return;\n    if (!architectures.every(Boolean)) return;\n    return {\n        name,\n        platform,\n        architectures\n    };\n}\nfunction matchTuple(platform, arch) {\n    return function(tuple) {\n        if (tuple == null) return false;\n        if (tuple.platform !== platform) return false;\n        return tuple.architectures.includes(arch);\n    };\n}\nfunction compareTuples(a, b) {\n    // Prefer single-arch prebuilds over multi-arch\n    return a.architectures.length - b.architectures.length;\n}\nfunction parseTags(file) {\n    var arr = file.split(\".\");\n    var extension = arr.pop();\n    var tags = {\n        file: file,\n        specificity: 0\n    };\n    if (extension !== \"node\") return;\n    for(var i = 0; i < arr.length; i++){\n        var tag = arr[i];\n        if (tag === \"node\" || tag === \"electron\" || tag === \"node-webkit\") {\n            tags.runtime = tag;\n        } else if (tag === \"napi\") {\n            tags.napi = true;\n        } else if (tag.slice(0, 3) === \"abi\") {\n            tags.abi = tag.slice(3);\n        } else if (tag.slice(0, 2) === \"uv\") {\n            tags.uv = tag.slice(2);\n        } else if (tag.slice(0, 4) === \"armv\") {\n            tags.armv = tag.slice(4);\n        } else if (tag === \"glibc\" || tag === \"musl\") {\n            tags.libc = tag;\n        } else {\n            continue;\n        }\n        tags.specificity++;\n    }\n    return tags;\n}\nfunction matchTags(runtime, abi) {\n    return function(tags) {\n        if (tags == null) return false;\n        if (tags.runtime !== runtime && !runtimeAgnostic(tags)) return false;\n        if (tags.abi !== abi && !tags.napi) return false;\n        if (tags.uv && tags.uv !== uv) return false;\n        if (tags.armv && tags.armv !== armv) return false;\n        if (tags.libc && tags.libc !== libc) return false;\n        return true;\n    };\n}\nfunction runtimeAgnostic(tags) {\n    return tags.runtime === \"node\" && tags.napi;\n}\nfunction compareTags(runtime) {\n    // Precedence: non-agnostic runtime, abi over napi, then by specificity.\n    return function(a, b) {\n        if (a.runtime !== b.runtime) {\n            return a.runtime === runtime ? -1 : 1;\n        } else if (a.abi !== b.abi) {\n            return a.abi ? -1 : 1;\n        } else if (a.specificity !== b.specificity) {\n            return a.specificity > b.specificity ? -1 : 1;\n        } else {\n            return 0;\n        }\n    };\n}\nfunction isNwjs() {\n    return !!(process.versions && process.versions.nw);\n}\nfunction isElectron() {\n    if (process.versions && process.versions.electron) return true;\n    if (process.env.ELECTRON_RUN_AS_NODE) return true;\n    return  false && 0;\n}\nfunction isMusl(platform) {\n    if (platform !== \"linux\") return false;\n    const { familySync, MUSL } = __webpack_require__(/*! detect-libc */ \"(rsc)/./node_modules/detect-libc/lib/detect-libc.js\");\n    return familySync() === MUSL;\n}\n// Exposed for unit tests\n// TODO: move to lib\nload.parseTags = parseTags;\nload.matchTags = matchTags;\nload.compareTags = compareTags;\nload.parseTuple = parseTuple;\nload.matchTuple = matchTuple;\nload.compareTuples = compareTuples;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/node-gyp-build-optional-packages/node-gyp-build.js\n");

/***/ })

};
;